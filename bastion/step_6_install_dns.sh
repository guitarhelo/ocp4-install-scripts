#!/bin/bash
#coredns installation
clusterName="openshift4"
domainName="example.com"
#wget https://github.com/coredns/coredns/releases/download/v1.6.9/coredns_1.6.9_linux_amd64.tgz
wget https://github.com/coredns/coredns/releases/download/v1.9.3/coredns_1.9.3_linux_amd64.tgz

#tar -zxvf coredns_1.6.9_linux_amd64.tgz
tar  -zxvf coredns_1.9.3_linux_amd64.tgz
mv coredns /usr/local/bin
chmod +x /usr/local/bin/coredns
useradd coredns -s /sbin/nologin

cat << EOF > /etc/systemd/system/coredns.service
[Unit]
Description=CoreDNS DNS server
Documentation=https://coredns.io
After=network.target

[Service]
PermissionsStartOnly=true
LimitNOFILE=1048576
LimitNPROC=512
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE
NoNewPrivileges=true
User=coredns
WorkingDirectory=~
ExecStart=/usr/local/bin/coredns -conf=/etc/coredns/Corefile
ExecReload=/bin/kill -SIGUSR1
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

mkdir -p /etc/coredns
cat << EOF > /etc/coredns/Corefile
.:53 {
    template IN A apps.ocp4.ewell.cc {
        match .*apps\.ocp4\.ewell\.cc
        answer "{{ .Name }} 60 IN A 192.168.150.234"
        fallthrough
    }
    etcd {
        path /skydns
        endpoint http://localhost:2379
        fallthrough
    }
    prometheus
    cache 160
    loadbalance
    forward . 114.114.114.114 10.128.57.21 223.5.5.5 223.6.6.6 8.8.8.8
    log
}
EOF


systemctl enable coredns --now

# 验证
yum install bind-utils -y

dig +short apps.openshift4.example.com @127.0.0.1
#返回值应为配置地址10.128.57.21
#Etcd安装

#Install epel repository using the following command:
yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

#Refresh repo by typing the following command:
yum repolist

sudo yum -y install curl
mkdir -p /data/software/golang
cd  /data/software/golang
#curl -O https://storage.googleapis.com/golang/getgo/installer_linux
#./installer_linux
wget https://go.dev/dl/go1.19.linux-amd64.tar.gz
tar zxpvf go1.19.linux-amd64.tar.gz -C /usr/local
vi ~/.bash_profile
source ~/.bash_profile
#export PATH=$PATH:/usr/local/go/bin


#git clone https://github.com/coreos/etcd.git

#cd etcd
#./build
wget https://github.com/etcd-io/etcd/releases/download/v3.4.20/etcd-v3.4.20-linux-arm64.tar.gz
#yum install -y etcd
systemctl enable etcd --now
systemctl status etcd

#查看域名解析
cat << EOF > /etc/resolv.conf
# Generated by NetworkManager
search ${clusterName}.${domainName}.com
nameserver 10.128.57.21
nameserver 114.114.114.114
EOF
#确认内部dns地址有效

#etcd添加域名解析
export ETCDCTL_API=3

# Bastion API Server HA
etcdctl put /skydns/cc/ewell/ocp4/api '{"host":"192.168.150.234", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/api '{"host":"192.168.150.234", "ttl":60}'

# Bastion Container Images Registry
etcdctl put /skydns/com/bjlab/okd/registry '{"host":"10.128.57.21", "ttl":60}'

# Master ETCD
etcdctl put /skydns/cc/ewell/ocp4/etcd-0 '{"host":"10.128.57.23", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/etcd-1 '{"host":"10.128.57.24", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/etcd-2 '{"host":"10.128.57.25", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/_tcp/_etcd-server-ssl/x1 '{"host":"etcd-0.ocp4.ewell.cc", "ttl":60, "priority":0, "weight":10, "port":2380}'
etcdctl put /skydns/cc/ewell/ocp4/_tcp/_etcd-server-ssl/x2 '{"host":"etcd-1.ocp4.ewell.cc", "ttl":60, "priority":0, "weight":10, "port":2380}'
etcdctl put /skydns/cc/ewell/ocp4/_tcp/_etcd-server-ssl/x3 '{"host":"etcd-2.ocp4.ewell.cc", "ttl":60, "priority":0, "weight":10, "port":2380}'
#hosts
etcdctl put /skydns/cc/ewell/ocp4/bastion '{"host":"10.128.57.21", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/bootstrap '{"host":"10.128.57.22", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/master1 '{"host":"10.128.57.23", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/master2 '{"host":"10.128.57.24", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/master3 '{"host":"10.128.57.25", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/worker1 '{"host":"10.128.57.26", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/worker2 '{"host":"10.128.57.27", "ttl":60}'
etcdctl put /skydns/cc/ewell/ocp4/worker3 '{"host":"10.128.57.28", "ttl":60}'

#反向域名解析，可以考虑不加，主要作用是集群在安装时，需要通过反向域名来修改hostname，如果是采用非EXP boot安装或者pods安装的方式，这些可以不加，主要是避免集群里面全是localhost的主机名
etcdctl put /skydns/arpa/in-addr/10/128/57/22 '{"host":"bootstrap.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/23 '{"host":"master1.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/24 '{"host":"master2.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/25 '{"host":"master3.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/26 '{"host":"worker1.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/27 '{"host":"worker2.ocp4.ewell.cc."}'
etcdctl put /skydns/arpa/in-addr/10/128/57/27 '{"host":"worker3.ocp4.ewell.cc."}'


# etcd查看域名添加
etcdctl get --prefix /skydns

#域名验证
dig +short @127.0.0.1 api.ocp4.ewell.cc
dig +short @127.0.0.1 api-int.ocp4.ewell.cc
dig +short @127.0.0.1 registry.ocp4.ewell.cc
dig +short @127.0.0.1 bootstrap.ocp4.ewell.cc
dig +short @127.0.0.1 master1.ocp4.ewell.cc
dig +short @127.0.0.1 master2.ocp4.ewell.cc
dig +short @127.0.0.1 master3.ocp4.ewell.cc
dig +short @127.0.0.1 worker1.ocp4.ewell.cc
dig +short @127.0.0.1 worker2.ocp4.ewell.cc

dig +short @127.0.0.1 -t SRV _etcd-server-ssl._tcp.ocp4.ewell.cc
dig +short @127.0.0.1 etcd-0.ocp4.ewell.cc
dig +short @127.0.0.1 etcd-1.ocp4.ewell.cc
dig +short @127.0.0.1 etcd-2.ocp4.ewell.cc

#重要，反向域名验证，如果你不打算用我后面的手动指定的办法的话，这个很重要，一定要一个个检查仔细
dig +noall +answer @127.0.0.1 -x 10.127.57.22
dig +noall +answer @127.0.0.1 -x 10.127.57.23
dig +noall +answer @127.0.0.1 -x 10.127.57.24
dig +noall +answer @127.0.0.1 -x 10.127.57.25
dig +noall +answer @127.0.0.1 -x 10.127.57.26
dig +noall +answer @127.0.0.1 -x 10.127.57.27
dig +noall +answer @127.0.0.1 -x 10.127.57.28
dig +noall +answer @127.0.0.1 -x 10.127.57.29